{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport imageOne from \"../../../public/assets/images/fashion/pro/001.jpg\";\nimport imageTwo from \"../../../public/assets/images/fashion/pro/002.jpg\";\nimport imageThree from \"../../../public/assets/images/fashion/pro/003.jpg\";\nimport imageFour from \"../../../public/assets/images/fashion/pro/004.jpg\";\nimport DetailsWithPrice from \"../common/detail-price\";\nimport { Col, Container, Row } from \"reactstrap\";\nimport gql from \"graphql-tag\";\nimport { useQuery } from \"@apollo/react-hooks\";\nconst GET_SINGLE_PRODUCTS = gql`\n  query product($id: Int!) {\n    product(id: $id) {\n      id\n      title\n      description\n      type\n      brand\n      category\n      price\n      new\n      sale\n      discount\n      stock\n      variants {\n        id\n        color\n        image_id\n        variant_id\n        size\n      }\n      images {\n        image_id\n        src\n      }\n    }\n  }\n`;\nconst imgData = [imageOne, imageTwo, imageThree, imageFour];\n\nconst FourImagePage = () => {\n  var {\n    data\n  } = useQuery(GET_SINGLE_PRODUCTS, {\n    variables: {\n      id: 1\n    }\n  });\n  return __jsx(\"section\", null, __jsx(\"div\", {\n    className: \"collection-wrapper ratio_asos\"\n  }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, {\n    lg: \"6\"\n  }, __jsx(Row, {\n    className: \"product_image_4\"\n  }, imgData.map((data, index) => {\n    return __jsx(Col, {\n      xs: \"6\",\n      key: index\n    }, __jsx(\"div\", null, __jsx(\"img\", {\n      src: data,\n      alt: \"\",\n      className: \"img-fluid blur-up lazyload bg-img\"\n    })));\n  }))), data ? __jsx(Col, {\n    lg: \"6\",\n    className: \"rtl-text\"\n  }, __jsx(DetailsWithPrice, {\n    item: data.product\n  })) : \"false\"))));\n};\n\nexport default FourImagePage;","map":null,"metadata":{},"sourceType":"module"}